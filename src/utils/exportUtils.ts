// Utility functions for exporting data in various formats

export function exportToJSON(data: any, filename: string) {
  const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });
  downloadBlob(blob, `${filename}.json`);
}

export function exportToCSV(data: any[], filename: string, language: string = 'en-US') {
  if (data.length === 0) return;
  
  // Get translation for headers
  const translateHeader = (key: string): string => {
    const translations: Record<string, Record<string, string>> = {
      'en-US': {
        id: 'ID',
        name: 'Name',
        category: 'Category',
        price: 'Price',
        stock: 'Stock',
        status: 'Status',
        sales: 'Sales',
        email: 'Email',
        phone: 'Phone',
        role: 'Role',
        fullName: 'Full Name',
        contact: 'Contact',
        image: 'Image',
      },
      'es-ES': {
        id: 'ID',
        name: 'Nombre',
        category: 'Categoría',
        price: 'Precio',
        stock: 'Existencias',
        status: 'Estado',
        sales: 'Ventas',
        email: 'Correo',
        phone: 'Teléfono',
        role: 'Rol',
        fullName: 'Nombre Completo',
        contact: 'Contacto',
        image: 'Imagen',
      },
      'fr-FR': {
        id: 'ID',
        name: 'Nom',
        category: 'Catégorie',
        price: 'Prix',
        stock: 'Stock',
        status: 'Statut',
        sales: 'Ventes',
        email: 'Email',
        phone: 'Téléphone',
        role: 'Rôle',
        fullName: 'Nom Complet',
        contact: 'Contact',
        image: 'Image',
      },
      'de-DE': {
        id: 'ID',
        name: 'Name',
        category: 'Kategorie',
        price: 'Preis',
        stock: 'Lagerbestand',
        status: 'Status',
        sales: 'Verkäufe',
        email: 'E-Mail',
        phone: 'Telefon',
        role: 'Rolle',
        fullName: 'Vollständiger Name',
        contact: 'Kontakt',
        image: 'Bild',
      },
      'pt-BR': {
        id: 'ID',
        name: 'Nome',
        category: 'Categoria',
        price: 'Preço',
        stock: 'Estoque',
        status: 'Status',
        sales: 'Vendas',
        email: 'Email',
        phone: 'Telefone',
        role: 'Função',
        fullName: 'Nome Completo',
        contact: 'Contato',
        image: 'Imagem',
      },
      'ja-JP': {
        id: 'ID',
        name: '名前',
        category: 'カテゴリ',
        price: '価格',
        stock: '在庫',
        status: 'ステータス',
        sales: '売上',
        email: 'メール',
        phone: '電話',
        role: '役割',
        fullName: 'フルネーム',
        contact: '連絡先',
        image: '画像',
      },
      'zh-CN': {
        id: 'ID',
        name: '名称',
        category: '类别',
        price: '价格',
        stock: '库存',
        status: '状态',
        sales: '销售',
        email: '电子邮件',
        phone: '电话',
        role: '角色',
        fullName: '全名',
        contact: '联系方式',
        image: '图片',
      },
    };
    
    const langCode = language.startsWith('en') ? 'en-US' :
                     language.startsWith('es') ? 'es-ES' :
                     language.startsWith('fr') ? 'fr-FR' :
                     language.startsWith('de') ? 'de-DE' :
                     language.startsWith('pt') ? 'pt-BR' :
                     language.startsWith('ja') ? 'ja-JP' :
                     language.startsWith('zh') ? 'zh-CN' : 'en-US';
    
    return translations[langCode][key] || key.charAt(0).toUpperCase() + key.slice(1);
  };
  
  const headers = Object.keys(data[0]);
  const translatedHeaders = headers.map(h => translateHeader(h));
  
  const csvContent = [
    translatedHeaders.join(','),
    ...data.map(row => 
      headers.map(header => {
        const value = row[header];
        // Escape commas and quotes
        if (typeof value === 'string' && (value.includes(',') || value.includes('"'))) {
          return `"${value.replace(/"/g, '""')}"`;
        }
        return value ?? '';
      }).join(',')
    )
  ].join('\n');
  
  // Add BOM for Excel UTF-8 support
  const blob = new Blob(['\ufeff' + csvContent], { type: 'text/csv;charset=utf-8;' });
  downloadBlob(blob, `${filename}.csv`);
}

export function exportToText(data: any, filename: string, title: string, language: string = 'en-US') {
  const getLocalizedText = (key: string): string => {
    const texts: Record<string, Record<string, string>> = {
      'en-US': {
        exportDate: 'Export Date',
        generatedBy: 'Generated by Dashboard System',
        item: 'Item',
        summary: 'Summary',
        details: 'Details',
        profile: 'Profile Settings',
        notifications: 'Notification Preferences',
        theme: 'Theme & Appearance',
        appearance: 'Appearance',
        language: 'Language & Region',
        name: 'Name',
        email: 'Email',
        phone: 'Phone',
        bio: 'Bio',
        company: 'Company',
        website: 'Website',
        location: 'Location',
        timezone: 'Timezone',
        darkMode: 'Dark Mode',
        compactMode: 'Compact Mode',
        animations: 'Animations',
        fontSize: 'Font Size',
        colorScheme: 'Color Scheme',
        dateFormat: 'Date Format',
        timeFormat: 'Time Format',
        currency: 'Currency',
        push: 'Push Notifications',
        weeklyReport: 'Weekly Report',
        productUpdates: 'Product Updates',
        securityAlerts: 'Security Alerts',
        totalRevenue: 'Total Revenue',
        totalOrders: 'Total Orders',
        activeUsers: 'Active Users',
        totalProducts: 'Total Products',
        stats: 'Statistics',
        title: 'Title',
        value: 'Value',
        change: 'Change',
      },
      'es-ES': {
        exportDate: 'Fecha de Exportación',
        generatedBy: 'Generado por Sistema Dashboard',
        item: 'Artículo',
        summary: 'Resumen',
        details: 'Detalles',
        profile: 'Configuración del Perfil',
        notifications: 'Preferencias de Notificaciones',
        theme: 'Tema y Apariencia',
        appearance: 'Apariencia',
        language: 'Idioma y Región',
        name: 'Nombre',
        email: 'Correo Electrónico',
        phone: 'Teléfono',
        bio: 'Biografía',
        company: 'Empresa',
        website: 'Sitio Web',
        location: 'Ubicación',
        timezone: 'Zona Horaria',
        darkMode: 'Modo Oscuro',
        compactMode: 'Modo Compacto',
        animations: 'Animaciones',
        fontSize: 'Tamaño de Fuente',
        colorScheme: 'Esquema de Color',
        dateFormat: 'Formato de Fecha',
        timeFormat: 'Formato de Hora',
        currency: 'Moneda',
        push: 'Notificaciones Push',
        weeklyReport: 'Reporte Semanal',
        productUpdates: 'Actualizaciones de Producto',
        securityAlerts: 'Alertas de Seguridad',
        totalRevenue: 'Ingresos Totales',
        totalOrders: 'Pedidos Totales',
        activeUsers: 'Usuarios Activos',
        totalProducts: 'Productos Totales',
        stats: 'Estadísticas',
        title: 'Título',
        value: 'Valor',
        change: 'Cambio',
      },
      'fr-FR': {
        exportDate: 'Date d\'Exportation',
        generatedBy: 'Généré par Système Dashboard',
        item: 'Article',
        summary: 'Résumé',
        details: 'Détails',
        profile: 'Paramètres du Profil',
        notifications: 'Préférences de Notification',
        theme: 'Thème et Apparence',
        appearance: 'Apparence',
        language: 'Langue et Région',
        name: 'Nom',
        email: 'Email',
        phone: 'Téléphone',
        bio: 'Biographie',
        company: 'Entreprise',
        website: 'Site Web',
        location: 'Emplacement',
        timezone: 'Fuseau Horaire',
        darkMode: 'Mode Sombre',
        compactMode: 'Mode Compact',
        animations: 'Animations',
        fontSize: 'Taille de Police',
        colorScheme: 'Schéma de Couleurs',
        dateFormat: 'Format de Date',
        timeFormat: 'Format d\'Heure',
        currency: 'Devise',
        push: 'Notifications Push',
        weeklyReport: 'Rapport Hebdomadaire',
        productUpdates: 'Mises à Jour Produit',
        securityAlerts: 'Alertes de Sécurité',
        totalRevenue: 'Revenu Total',
        totalOrders: 'Commandes Totales',
        activeUsers: 'Utilisateurs Actifs',
        totalProducts: 'Produits Totaux',
        stats: 'Statistiques',
        title: 'Titre',
        value: 'Valeur',
        change: 'Changement',
      },
      'de-DE': {
        exportDate: 'Exportdatum',
        generatedBy: 'Generiert vom Dashboard-System',
        item: 'Artikel',
        summary: 'Zusammenfassung',
        details: 'Details',
        profile: 'Profileinstellungen',
        notifications: 'Benachrichtigungseinstellungen',
        theme: 'Design und Erscheinungsbild',
        appearance: 'Erscheinungsbild',
        language: 'Sprache und Region',
        name: 'Name',
        email: 'E-Mail',
        phone: 'Telefon',
        bio: 'Biografie',
        company: 'Unternehmen',
        website: 'Webseite',
        location: 'Standort',
        timezone: 'Zeitzone',
        darkMode: 'Dunkler Modus',
        compactMode: 'Kompaktmodus',
        animations: 'Animationen',
        fontSize: 'Schriftgröße',
        colorScheme: 'Farbschema',
        dateFormat: 'Datumsformat',
        timeFormat: 'Zeitformat',
        currency: 'Währung',
        push: 'Push-Benachrichtigungen',
        weeklyReport: 'Wöchentlicher Bericht',
        productUpdates: 'Produktaktualisierungen',
        securityAlerts: 'Sicherheitswarnungen',
        totalRevenue: 'Gesamtumsatz',
        totalOrders: 'Gesamtbestellungen',
        activeUsers: 'Aktive Benutzer',
        totalProducts: 'Gesamtprodukte',
        stats: 'Statistiken',
        title: 'Titel',
        value: 'Wert',
        change: 'Änderung',
      },
      'pt-BR': {
        exportDate: 'Data de Exportação',
        generatedBy: 'Gerado pelo Sistema Dashboard',
        item: 'Item',
        summary: 'Resumo',
        details: 'Detalhes',
        profile: 'Configurações de Perfil',
        notifications: 'Preferências de Notificações',
        theme: 'Tema e Aparência',
        appearance: 'Aparência',
        language: 'Idioma e Região',
        name: 'Nome',
        email: 'Email',
        phone: 'Telefone',
        bio: 'Biografia',
        company: 'Empresa',
        website: 'Site',
        location: 'Localização',
        timezone: 'Fuso Horário',
        darkMode: 'Modo Escuro',
        compactMode: 'Modo Compacto',
        animations: 'Animações',
        fontSize: 'Tamanho da Fonte',
        colorScheme: 'Esquema de Cores',
        dateFormat: 'Formato de Data',
        timeFormat: 'Formato de Hora',
        currency: 'Moeda',
        push: 'Notificações Push',
        weeklyReport: 'Relatório Semanal',
        productUpdates: 'Atualizações de Produto',
        securityAlerts: 'Alertas de Segurança',
        totalRevenue: 'Receita Total',
        totalOrders: 'Pedidos Totais',
        activeUsers: 'Usuários Ativos',
        totalProducts: 'Produtos Totais',
        stats: 'Estatísticas',
        title: 'Título',
        value: 'Valor',
        change: 'Mudança',
      },
      'ja-JP': {
        exportDate: 'エクスポート日',
        generatedBy: 'ダッシュボードシステムで生成',
        item: 'アイテム',
        summary: '概要',
        details: '詳細',
        profile: 'プロフィール設定',
        notifications: '通知設定',
        theme: 'テーマと外観',
        appearance: '外観',
        language: '言語と地域',
        name: '名前',
        email: 'メール',
        phone: '電話',
        bio: '自己紹介',
        company: '会社',
        website: 'ウェブサイト',
        location: '場所',
        timezone: 'タイムゾーン',
        darkMode: 'ダークモード',
        compactMode: 'コンパクトモード',
        animations: 'アニメーション',
        fontSize: 'フォントサイズ',
        colorScheme: 'カラースキーム',
        dateFormat: '日付形式',
        timeFormat: '時刻形式',
        currency: '通貨',
        push: '��ッシュ通知',
        weeklyReport: '週次レポート',
        productUpdates: '製品アップデート',
        securityAlerts: 'セキュリティアラート',
      },
      'zh-CN': {
        exportDate: '导出日期',
        generatedBy: '由仪表板系统生成',
        item: '项目',
        summary: '摘要',
        details: '详情',
        profile: '个人资料设置',
        notifications: '通知偏好',
        theme: '主题和外观',
        appearance: '外观',
        language: '语言和地区',
        name: '名称',
        email: '电子邮件',
        phone: '电话',
        bio: '简介',
        company: '公司',
        website: '网站',
        location: '位置',
        timezone: '时区',
        darkMode: '深色模式',
        compactMode: '紧凑模式',
        animations: '动画',
        fontSize: '字体大小',
        colorScheme: '配色方案',
        dateFormat: '日期格式',
        timeFormat: '时间格式',
        currency: '货币',
        push: '推送通知',
        weeklyReport: '每周报告',
        productUpdates: '产品更新',
        securityAlerts: '安全警报',
        totalRevenue: '总收入',
        totalOrders: '总订单',
        activeUsers: '活跃用户',
        totalProducts: '总产品',
        stats: '统计',
        title: '标题',
        value: '值',
        change: '变化',
      },
    };
    
    const langCode = language.startsWith('en') ? 'en-US' :
                     language.startsWith('es') ? 'es-ES' :
                     language.startsWith('fr') ? 'fr-FR' :
                     language.startsWith('de') ? 'de-DE' :
                     language.startsWith('pt') ? 'pt-BR' :
                     language.startsWith('ja') ? 'ja-JP' :
                     language.startsWith('zh') ? 'zh-CN' : 'en-US';
    
    return texts[langCode][key] || key;
  };

  const getSectionEmoji = (key: string): string => {
    const emojiMap: Record<string, string> = {
      profile: '👤',
      notifications: '🔔',
      theme: '🎨',
      appearance: '✨',
      language: '🌐',
      dateFormat: '📅',
      timeFormat: '⏰',
      currency: '💰',
    };
    return emojiMap[key] || '📋';
  };

  const getFieldEmoji = (key: string): string => {
    const emojiMap: Record<string, string> = {
      name: '👤',
      email: '📧',
      phone: '📱',
      bio: '📝',
      company: '🏢',
      website: '🌐',
      location: '📍',
      timezone: '🌍',
      darkMode: '🌙',
      compactMode: '📐',
      animations: '✨',
      fontSize: '🔤',
      colorScheme: '🎨',
      push: '📲',
      weeklyReport: '📊',
      productUpdates: '🆕',
      securityAlerts: '🔒',
    };
    return emojiMap[key] || '•';
  };

  const formatBoolean = (value: any): string => {
    return value ? '✅' : '❌';
  };
  
  let textContent = '';
  
  // Header elegante
  textContent += '\n\n';
  textContent += '═══════════════════════════════════════════════════════════════════\n';
  textContent += '                                                                   \n';
  textContent += `                     📄  ${title.toUpperCase()}                    \n`;
  textContent += '                                                                   \n';
  textContent += '═══════════════════════════════════════════════════════════════════\n\n';
  
  // Info de exportación
  textContent += `  📅  ${getLocalizedText('exportDate')}\n`;
  textContent += `      ${new Date().toLocaleString(language, { dateStyle: 'full', timeStyle: 'short' })}\n\n`;
  textContent += `  ⚙️   ${getLocalizedText('generatedBy')}\n\n`;
  textContent += '───────────────────────────────────────────────────────────────────\n\n';
  
  if (Array.isArray(data)) {
    data.forEach((item, index) => {
      textContent += `\n  ■  ${getLocalizedText('item')} ${index + 1}\n`;
      textContent += '     ┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄┄\n\n';
      Object.entries(item).forEach(([key, value]) => {
        if (key !== 'image') {
          const translatedKey = getLocalizedText(key);
          const displayKey = translatedKey || (key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, ' $1'));
          textContent += `     ${getFieldEmoji(key)}  ${displayKey.padEnd(18)}: ${value}\n`;
        }
      });
      textContent += '\n';
    });
  } else {
    Object.entries(data).forEach(([key, value]) => {
      if (Array.isArray(value) && key === 'stats') {
        textContent += `\n  📊  ${getLocalizedText('stats').toUpperCase()}\n`;
        textContent += '  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n';
        value.forEach((stat: any, index: number) => {
          textContent += `     ${index + 1}. ${stat.title}\n`;
          textContent += `        ${getLocalizedText('value')}: ${stat.value}\n`;
          if (stat.change) {
            textContent += `        ${getLocalizedText('change')}: ${stat.change}\n`;
          }
          textContent += '\n';
        });
      } else if (typeof value === 'object' && value !== null && !key.includes('Date') && !Array.isArray(value)) {
        textContent += `\n  ${getSectionEmoji(key)}  ${getLocalizedText(key).toUpperCase()}\n`;
        textContent += '  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n';
        Object.entries(value as object).forEach(([k, v]) => {
          const translatedKey = getLocalizedText(k);
          const displayValue = typeof v === 'boolean' ? formatBoolean(v) : v;
          textContent += `     ${getFieldEmoji(k)}  ${translatedKey.padEnd(28)} ${displayValue}\n`;
        });
        textContent += '\n';
      } else if (!key.includes('Date') && key !== 'stats') {
        const translatedKey = getLocalizedText(key);
        const displayValue = typeof value === 'boolean' ? formatBoolean(value) : value;
        textContent += `  ${getFieldEmoji(key)}  ${translatedKey.padEnd(30)} ${displayValue}\n`;
      }
    });
  }
  
  // Footer elegante
  textContent += '\n\n';
  textContent += '═══════════════════════════════════════════════════════════════════\n';
  textContent += `                  ✨  ${getLocalizedText('generatedBy')}\n`;
  textContent += `                  📆  ${new Date().toLocaleDateString(language, { dateStyle: 'long' })}\n`;
  textContent += '═══════════════════════════════════════════════════════════════════\n\n';
  
  const blob = new Blob([textContent], { type: 'text/plain;charset=utf-8;' });
  downloadBlob(blob, `${filename}.txt`);
}

export function exportToPDF(data: any, filename: string, title: string, language: string = 'en-US') {
  const getLocalizedText = (key: string): string => {
    const texts: Record<string, Record<string, string>> = {
      'en-US': {
        exportDate: 'Export Date',
        generatedBy: 'Generated by Dashboard System',
        totalRecords: 'Total Records',
        summary: 'Summary',
        page: 'Page',
        profile: 'Profile Settings',
        notifications: 'Notification Preferences',
        theme: 'Theme & Appearance',
        appearance: 'Appearance',
        language: 'Language & Region',
        name: 'Name',
        email: 'Email',
        phone: 'Phone',
        bio: 'Bio',
        company: 'Company',
        website: 'Website',
        location: 'Location',
        timezone: 'Timezone',
        darkMode: 'Dark Mode',
        compactMode: 'Compact Mode',
        animations: 'Animations',
        fontSize: 'Font Size',
        colorScheme: 'Color Scheme',
        dateFormat: 'Date Format',
        timeFormat: 'Time Format',
        currency: 'Currency',
        push: 'Push Notifications',
        weeklyReport: 'Weekly Report',
        productUpdates: 'Product Updates',
        securityAlerts: 'Security Alerts',
        totalRevenue: 'Total Revenue',
        totalOrders: 'Total Orders',
        activeUsers: 'Active Users',
        totalProducts: 'Total Products',
        stats: 'Statistics',
      },
      'es-ES': {
        exportDate: 'Fecha de Exportación',
        generatedBy: 'Generado por Sistema Dashboard',
        totalRecords: 'Total de Registros',
        summary: 'Resumen',
        page: 'Página',
        profile: 'Configuración del Perfil',
        notifications: 'Preferencias de Notificaciones',
        theme: 'Tema y Apariencia',
        appearance: 'Apariencia',
        language: 'Idioma y Región',
        name: 'Nombre',
        email: 'Correo Electrónico',
        phone: 'Teléfono',
        bio: 'Biografía',
        company: 'Empresa',
        website: 'Sitio Web',
        location: 'Ubicación',
        timezone: 'Zona Horaria',
        darkMode: 'Modo Oscuro',
        compactMode: 'Modo Compacto',
        animations: 'Animaciones',
        fontSize: 'Tamaño de Fuente',
        colorScheme: 'Esquema de Color',
        dateFormat: 'Formato de Fecha',
        timeFormat: 'Formato de Hora',
        currency: 'Moneda',
        push: 'Notificaciones Push',
        weeklyReport: 'Reporte Semanal',
        productUpdates: 'Actualizaciones de Producto',
        securityAlerts: 'Alertas de Seguridad',
        totalRevenue: 'Ingresos Totales',
        totalOrders: 'Pedidos Totales',
        activeUsers: 'Usuarios Activos',
        totalProducts: 'Productos Totales',
        stats: 'Estadísticas',
      },
      'fr-FR': {
        exportDate: 'Date d\'Exportation',
        generatedBy: 'Généré par Système Dashboard',
        totalRecords: 'Total des Enregistrements',
        summary: 'Résumé',
        page: 'Page',
        profile: 'Paramètres du Profil',
        notifications: 'Préférences de Notification',
        theme: 'Thème et Apparence',
        appearance: 'Apparence',
        language: 'Langue et Région',
        name: 'Nom',
        email: 'Email',
        phone: 'Téléphone',
        bio: 'Biographie',
        company: 'Entreprise',
        website: 'Site Web',
        location: 'Emplacement',
        timezone: 'Fuseau Horaire',
        darkMode: 'Mode Sombre',
        compactMode: 'Mode Compact',
        animations: 'Animations',
        fontSize: 'Taille de Police',
        colorScheme: 'Schéma de Couleurs',
        dateFormat: 'Format de Date',
        timeFormat: 'Format d\'Heure',
        currency: 'Devise',
        push: 'Notifications Push',
        weeklyReport: 'Rapport Hebdomadaire',
        productUpdates: 'Mises à Jour Produit',
        securityAlerts: 'Alertes de Sécurité',
        totalRevenue: 'Revenu Total',
        totalOrders: 'Commandes Totales',
        activeUsers: 'Utilisateurs Actifs',
        totalProducts: 'Produits Totaux',
        stats: 'Statistiques',
      },
      'de-DE': {
        exportDate: 'Exportdatum',
        generatedBy: 'Generiert vom Dashboard-System',
        totalRecords: 'Gesamtanzahl',
        summary: 'Zusammenfassung',
        page: 'Seite',
        profile: 'Profileinstellungen',
        notifications: 'Benachrichtigungseinstellungen',
        theme: 'Design und Erscheinungsbild',
        appearance: 'Erscheinungsbild',
        language: 'Sprache und Region',
        name: 'Name',
        email: 'E-Mail',
        phone: 'Telefon',
        bio: 'Biografie',
        company: 'Unternehmen',
        website: 'Webseite',
        location: 'Standort',
        timezone: 'Zeitzone',
        darkMode: 'Dunkler Modus',
        compactMode: 'Kompaktmodus',
        animations: 'Animationen',
        fontSize: 'Schriftgröße',
        colorScheme: 'Farbschema',
        dateFormat: 'Datumsformat',
        timeFormat: 'Zeitformat',
        currency: 'Währung',
        push: 'Push-Benachrichtigungen',
        weeklyReport: 'Wöchentlicher Bericht',
        productUpdates: 'Produktaktualisierungen',
        securityAlerts: 'Sicherheitswarnungen',
        totalRevenue: 'Gesamtumsatz',
        totalOrders: 'Gesamtbestellungen',
        activeUsers: 'Aktive Benutzer',
        totalProducts: 'Gesamtprodukte',
        stats: 'Statistiken',
      },
      'pt-BR': {
        exportDate: 'Data de Exportação',
        generatedBy: 'Gerado pelo Sistema Dashboard',
        totalRecords: 'Total de Registros',
        summary: 'Resumo',
        page: 'Página',
        profile: 'Configurações de Perfil',
        notifications: 'Preferências de Notificações',
        theme: 'Tema e Aparência',
        appearance: 'Aparência',
        language: 'Idioma e Região',
        name: 'Nome',
        email: 'Email',
        phone: 'Telefone',
        bio: 'Biografia',
        company: 'Empresa',
        website: 'Site',
        location: 'Localização',
        timezone: 'Fuso Horário',
        darkMode: 'Modo Escuro',
        compactMode: 'Modo Compacto',
        animations: 'Animações',
        fontSize: 'Tamanho da Fonte',
        colorScheme: 'Esquema de Cores',
        dateFormat: 'Formato de Data',
        timeFormat: 'Formato de Hora',
        currency: 'Moeda',
        push: 'Notificações Push',
        weeklyReport: 'Relatório Semanal',
        productUpdates: 'Atualizações de Produto',
        securityAlerts: 'Alertas de Segurança',
        totalRevenue: 'Receita Total',
        totalOrders: 'Pedidos Totais',
        activeUsers: 'Usuários Ativos',
        totalProducts: 'Produtos Totais',
        stats: 'Estatísticas',
      },
      'ja-JP': {
        exportDate: 'エクスポート日',
        generatedBy: 'ダッシュボードシステムで生成',
        totalRecords: '総レコード数',
        summary: '概要',
        page: 'ページ',
        profile: 'プロフィール設定',
        notifications: '通知設定',
        theme: 'テーマと外観',
        appearance: '外観',
        language: '言語と地域',
        name: '名前',
        email: 'メール',
        phone: '電話',
        bio: '自己紹介',
        company: '会社',
        website: 'ウェブサイト',
        location: '場所',
        timezone: 'タイムゾーン',
        darkMode: 'ダークモード',
        compactMode: 'コンパクトモード',
        animations: 'アニメーション',
        fontSize: 'フォントサイズ',
        colorScheme: 'カラースキーム',
        dateFormat: '日付形式',
        timeFormat: '時刻形式',
        currency: '通貨',
        push: 'プッシュ通知',
        weeklyReport: '週次レポート',
        productUpdates: '製品アップデート',
        securityAlerts: 'セキュリティアラート',
        totalRevenue: '総収益',
        totalOrders: '総注文数',
        activeUsers: 'アクティブユーザー',
        totalProducts: '総製品数',
        stats: '統計',
        title: 'タイトル',
        value: '値',
        change: '変更',
      },
      'zh-CN': {
        exportDate: '导出日期',
        generatedBy: '由仪表板系统生成',
        totalRecords: '总记录数',
        summary: '摘要',
        page: '页',
        profile: '个人资料设置',
        notifications: '通知偏好',
        theme: '主题和外观',
        appearance: '外观',
        language: '语言和地区',
        name: '名称',
        email: '电子邮件',
        phone: '电话',
        bio: '简介',
        company: '公司',
        website: '网站',
        location: '位置',
        timezone: '时区',
        darkMode: '深色模式',
        compactMode: '紧凑模式',
        animations: '动画',
        fontSize: '字体大小',
        colorScheme: '配色方案',
        dateFormat: '日期格式',
        timeFormat: '时间格式',
        currency: '货币',
        push: '推送通知',
        weeklyReport: '每周报告',
        productUpdates: '产品更新',
        securityAlerts: '安全警报',
        totalRevenue: '总收入',
        totalOrders: '总订单',
        activeUsers: '活跃用户',
        totalProducts: '总产品',
        stats: '统计',
      },
    };
    
    const langCode = language.startsWith('en') ? 'en-US' :
                     language.startsWith('es') ? 'es-ES' :
                     language.startsWith('fr') ? 'fr-FR' :
                     language.startsWith('de') ? 'de-DE' :
                     language.startsWith('pt') ? 'pt-BR' :
                     language.startsWith('ja') ? 'ja-JP' :
                     language.startsWith('zh') ? 'zh-CN' : 'en-US';
    
    return texts[langCode][key] || key;
  };

  const getSectionEmoji = (key: string): string => {
    const emojiMap: Record<string, string> = {
      profile: '👤',
      notifications: '🔔',
      theme: '🎨',
      appearance: '✨',
      language: '🌐',
    };
    return emojiMap[key] || '📋';
  };

  const getFieldEmoji = (key: string): string => {
    const emojiMap: Record<string, string> = {
      name: '👤',
      email: '📧',
      phone: '📱',
      bio: '📝',
      company: '🏢',
      website: '🌐',
      location: '📍',
      timezone: '🌍',
      darkMode: '🌙',
      compactMode: '📐',
      animations: '✨',
      fontSize: '🔤',
      colorScheme: '🎨',
      dateFormat: '📅',
      timeFormat: '⏰',
      currency: '💰',
      push: '📲',
      weeklyReport: '📊',
      productUpdates: '🆕',
      securityAlerts: '🔒',
    };
    return emojiMap[key] || '▫️';
  };

  const translateHeader = (key: string): string => {
    const translations: Record<string, Record<string, string>> = {
      'en-US': {
        id: 'ID',
        name: 'Name',
        category: 'Category',
        price: 'Price',
        stock: 'Stock',
        status: 'Status',
        sales: 'Sales',
        email: 'Email',
        phone: 'Phone',
        role: 'Role',
        fullName: 'Full Name',
        contact: 'Contact',
      },
      'es-ES': {
        id: 'ID',
        name: 'Nombre',
        category: 'Categoría',
        price: 'Precio',
        stock: 'Existencias',
        status: 'Estado',
        sales: 'Ventas',
        email: 'Correo',
        phone: 'Teléfono',
        role: 'Rol',
        fullName: 'Nombre Completo',
        contact: 'Contacto',
      },
      'fr-FR': {
        id: 'ID',
        name: 'Nom',
        category: 'Catégorie',
        price: 'Prix',
        stock: 'Stock',
        status: 'Statut',
        sales: 'Ventes',
        email: 'Email',
        phone: 'Téléphone',
        role: 'Rôle',
        fullName: 'Nom Complet',
        contact: 'Contact',
      },
      'de-DE': {
        id: 'ID',
        name: 'Name',
        category: 'Kategorie',
        price: 'Preis',
        stock: 'Lagerbestand',
        status: 'Status',
        sales: 'Verkäufe',
        email: 'E-Mail',
        phone: 'Telefon',
        role: 'Rolle',
        fullName: 'Vollständiger Name',
        contact: 'Kontakt',
      },
      'pt-BR': {
        id: 'ID',
        name: 'Nome',
        category: 'Categoria',
        price: 'Preço',
        stock: 'Estoque',
        status: 'Status',
        sales: 'Vendas',
        email: 'Email',
        phone: 'Telefone',
        role: 'Função',
        fullName: 'Nome Completo',
        contact: 'Contato',
      },
      'ja-JP': {
        id: 'ID',
        name: '名前',
        category: 'カテゴリ',
        price: '価格',
        stock: '在庫',
        status: 'ステータス',
        sales: '売上',
        email: 'メール',
        phone: '電話',
        role: '役割',
        fullName: 'フルネーム',
        contact: '連絡先',
      },
      'zh-CN': {
        id: 'ID',
        name: '名称',
        category: '类别',
        price: '价格',
        stock: '库存',
        status: '状态',
        sales: '销售',
        email: '电子邮件',
        phone: '电话',
        role: '角色',
        fullName: '全名',
        contact: '联系方式',
      },
    };
    
    const langCode = language.startsWith('en') ? 'en-US' :
                     language.startsWith('es') ? 'es-ES' :
                     language.startsWith('fr') ? 'fr-FR' :
                     language.startsWith('de') ? 'de-DE' :
                     language.startsWith('pt') ? 'pt-BR' :
                     language.startsWith('ja') ? 'ja-JP' :
                     language.startsWith('zh') ? 'zh-CN' : 'en-US';
    
    return translations[langCode][key] || key.charAt(0).toUpperCase() + key.slice(1);
  };

  let htmlContent = `
<!DOCTYPE html>
<html lang="${language}">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>${title}</title>
  <style>
    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');
    
    @media print {
      body { margin: 0; padding: 40px; }
      .page-break { page-break-after: always; }
      .no-print { display: none; }
    }
    
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
    
    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
      padding: 60px 80px;
      max-width: 1200px;
      margin: 0 auto;
      background: linear-gradient(135deg, #f5f7fa 0%, #ffffff 100%);
      color: #1a202c;
      line-height: 1.8;
    }
    
    .document-wrapper {
      background: white;
      padding: 60px;
      border-radius: 24px;
      box-shadow: 0 20px 60px rgba(0, 0, 0, 0.08);
    }
    
    .header {
      text-align: center;
      margin-bottom: 60px;
      padding-bottom: 40px;
      border-bottom: 1px solid #e2e8f0;
      position: relative;
    }
    
    .header::before {
      content: '';
      position: absolute;
      bottom: -2px;
      left: 50%;
      transform: translateX(-50%);
      width: 80px;
      height: 4px;
      background: linear-gradient(90deg, #667eea 0%, #764ba2 100%);
      border-radius: 2px;
    }
    
    .header h1 {
      color: #1a202c;
      font-size: 42px;
      margin: 0 0 16px 0;
      font-weight: 700;
      letter-spacing: -1px;
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      background-clip: text;
    }
    
    .header .subtitle {
      color: #64748b;
      font-size: 15px;
      margin: 12px 0;
      font-weight: 400;
      letter-spacing: 0.3px;
    }
    
    .meta-info {
      display: flex;
      justify-content: center;
      gap: 40px;
      margin-top: 24px;
      flex-wrap: wrap;
    }
    
    .meta-item {
      display: flex;
      align-items: center;
      gap: 8px;
      color: #475569;
      font-size: 14px;
    }
    
    .summary-card {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 32px 40px;
      border-radius: 16px;
      margin: 40px 0;
      box-shadow: 0 10px 40px rgba(102, 126, 234, 0.25);
    }
    
    .summary-card p {
      margin: 12px 0;
      font-size: 16px;
      font-weight: 500;
      display: flex;
      align-items: center;
      gap: 12px;
    }
    
    .summary-card strong {
      font-weight: 600;
      opacity: 0.95;
    }
    
    table {
      width: 100%;
      border-collapse: separate;
      border-spacing: 0;
      margin: 40px 0;
      box-shadow: 0 4px 20px rgba(0, 0, 0, 0.06);
      border-radius: 12px;
      overflow: hidden;
    }
    
    th {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 18px 20px;
      text-align: left;
      font-weight: 600;
      font-size: 13px;
      letter-spacing: 0.5px;
      text-transform: uppercase;
    }
    
    th:first-child {
      border-top-left-radius: 12px;
    }
    
    th:last-child {
      border-top-right-radius: 12px;
    }
    
    td {
      padding: 18px 20px;
      border-bottom: 1px solid #f1f5f9;
      font-size: 15px;
      color: #334155;
    }
    
    tr:nth-child(even) {
      background-color: #f8fafc;
    }
    
    tr:last-child td {
      border-bottom: none;
    }
    
    tr:last-child td:first-child {
      border-bottom-left-radius: 12px;
    }
    
    tr:last-child td:last-child {
      border-bottom-right-radius: 12px;
    }
    
    tbody tr {
      transition: all 0.2s ease;
    }
    
    tbody tr:hover {
      background-color: #f1f5f9;
      transform: translateY(-1px);
    }
    
    .section-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 24px;
      margin: 40px 0;
    }
    
    .section-card {
      background: #ffffff;
      padding: 32px;
      border-radius: 16px;
      border: 1px solid #e2e8f0;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.04);
      transition: all 0.3s ease;
    }
    
    .section-card:hover {
      box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);
      transform: translateY(-2px);
    }
    
    .section-card h2 {
      color: #1e293b;
      margin: 0 0 24px 0;
      font-size: 20px;
      font-weight: 600;
      display: flex;
      align-items: center;
      gap: 10px;
      padding-bottom: 16px;
      border-bottom: 2px solid #f1f5f9;
    }
    
    .info-grid {
      display: grid;
      gap: 16px;
    }
    
    .info-item {
      padding: 16px 20px;
      background: #f8fafc;
      border-radius: 10px;
      border-left: 3px solid #667eea;
      transition: all 0.2s ease;
    }
    
    .info-item:hover {
      background: #f1f5f9;
      border-left-color: #764ba2;
    }
    
    .info-item strong {
      color: #64748b;
      font-size: 12px;
      text-transform: uppercase;
      letter-spacing: 0.5px;
      display: flex;
      align-items: center;
      gap: 6px;
      margin-bottom: 6px;
      font-weight: 600;
    }
    
    .info-item span {
      color: #1e293b;
      font-size: 16px;
      font-weight: 500;
      display: block;
    }
    
    .footer {
      margin-top: 80px;
      padding-top: 32px;
      border-top: 1px solid #e2e8f0;
      text-align: center;
      color: #64748b;
      font-size: 14px;
    }
    
    .footer p {
      margin: 8px 0;
    }
    
    .badge {
      display: inline-block;
      padding: 6px 14px;
      border-radius: 20px;
      font-size: 13px;
      font-weight: 600;
      background: #dbeafe;
      color: #1e40af;
    }
    
    .badge-success {
      background: #dcfce7;
      color: #166534;
    }
    
    .badge-warning {
      background: #fef3c7;
      color: #92400e;
    }
    
    .badge-info {
      background: #e0e7ff;
      color: #3730a3;
    }
    
    @media (max-width: 768px) {
      body {
        padding: 30px 20px;
      }
      
      .document-wrapper {
        padding: 30px 20px;
        border-radius: 16px;
      }
      
      .header h1 {
        font-size: 32px;
      }
      
      .section-grid {
        grid-template-columns: 1fr;
      }
    }
  </style>
</head>
<body>
  <div class="document-wrapper">
    <div class="header">
      <h1>📄 ${title}</h1>
      <div class="meta-info">
        <div class="meta-item">
          <span>📅</span>
          <span>${getLocalizedText('exportDate')}: ${new Date().toLocaleString(language, { 
            dateStyle: 'full', 
            timeStyle: 'short' 
          })}</span>
        </div>
      </div>
    </div>
`;

  if (Array.isArray(data)) {
    if (data.length > 0) {
      htmlContent += `
  <div class="summary-card">
    <p><strong>📊 ${getLocalizedText('totalRecords')}:</strong> ${data.length}</p>
  </div>
`;
      
      const headers = Object.keys(data[0]).filter(h => h !== 'image');
      htmlContent += `
  <table>
    <thead>
      <tr>
        ${headers.map(h => `<th>${translateHeader(h)}</th>`).join('')}
      </tr>
    </thead>
    <tbody>
`;
      
      data.forEach(row => {
        htmlContent += `
      <tr>
        ${headers.map(h => {
          let value = row[h];
          if (h === 'status') {
            const badgeClass = value === 'active' ? 'badge-success' : 'badge-warning';
            return `<td><span class="badge ${badgeClass}">${value}</span></td>`;
          }
          if (h === 'price') {
            return `<td><strong>$${parseFloat(value).toFixed(2)}</strong></td>`;
          }
          return `<td>${value ?? ''}</td>`;
        }).join('')}
      </tr>
`;
      });
      
      htmlContent += `
    </tbody>
  </table>
`;
    }
  } else {
    // Show summary stats if they exist
    const hasBasicStats = data.totalRevenue || data.totalOrders || data.activeUsers || data.totalProducts;
    if (hasBasicStats) {
      htmlContent += `
  <div class="summary-card">
    ${data.totalRevenue ? `<p><strong>💰 ${getLocalizedText('totalRevenue')}:</strong> ${data.totalRevenue}</p>` : ''}
    ${data.totalOrders ? `<p><strong>🛒 ${getLocalizedText('totalOrders')}:</strong> ${data.totalOrders}</p>` : ''}
    ${data.activeUsers ? `<p><strong>👥 ${getLocalizedText('activeUsers')}:</strong> ${data.activeUsers}</p>` : ''}
    ${data.totalProducts ? `<p><strong>📦 ${getLocalizedText('totalProducts')}:</strong> ${data.totalProducts}</p>` : ''}
  </div>
`;
    }

    // Show stats array if it exists
    if (Array.isArray(data.stats) && data.stats.length > 0) {
      htmlContent += `
  <div class="section-card">
    <h2>📊 ${getLocalizedText('stats')}</h2>
    <div class="info-grid">`;
      data.stats.forEach((stat: any) => {
        htmlContent += `
      <div class="info-item">
        <strong>${stat.title}</strong>
        <span>${stat.value} ${stat.change ? `<span class="badge badge-info">${stat.change}</span>` : ''}</span>
      </div>`;
      });
      htmlContent += `
    </div>
  </div>
`;
    }

    htmlContent += '<div class="section-grid">';
    Object.entries(data).forEach(([key, value]) => {
      // Skip stats array and basic stats as we already showed them
      if (key === 'stats' || key === 'totalRevenue' || key === 'totalOrders' || key === 'activeUsers' || key === 'totalProducts') {
        return;
      }

      if (typeof value === 'object' && !Array.isArray(value) && value !== null && !key.includes('Date')) {
        const sectionEmoji = getSectionEmoji(key);
        const sectionTitle = getLocalizedText(key);
        htmlContent += `<div class="section-card"><h2>${sectionEmoji} ${sectionTitle}</h2><div class="info-grid">`;
        Object.entries(value as object).forEach(([k, v]) => {
          const fieldEmoji = getFieldEmoji(k);
          const translatedKey = getLocalizedText(k);
          const displayValue = typeof v === 'boolean' ? (v ? '✅ ' + (
            language.startsWith('es') ? 'Sí' :
            language.startsWith('fr') ? 'Oui' :
            language.startsWith('de') ? 'Ja' :
            language.startsWith('pt') ? 'Sim' :
            language.startsWith('ja') ? 'はい' :
            language.startsWith('zh') ? '是' : 'Yes'
          ) : '❌ No') : v;
          htmlContent += `
          <div class="info-item">
            <strong>${fieldEmoji} ${translatedKey}</strong>
            <span>${displayValue}</span>
          </div>`;
        });
        htmlContent += '</div></div>';
      } else if (!key.includes('Date')) {
        const fieldEmoji = getFieldEmoji(key);
        const translatedKey = getLocalizedText(key);
        const displayValue = typeof value === 'boolean' ? (value ? '✅ ' + (
          language.startsWith('es') ? 'Sí' :
          language.startsWith('fr') ? 'Oui' :
          language.startsWith('de') ? 'Ja' :
          language.startsWith('pt') ? 'Sim' :
          language.startsWith('ja') ? 'はい' :
          language.startsWith('zh') ? '是' : 'Yes'
        ) : '❌ No') : value;
        htmlContent += `
        <div class="section-card">
          <div class="info-item">
            <strong>${fieldEmoji} ${translatedKey}</strong>
            <span>${displayValue}</span>
          </div>
        </div>`;
      }
    });
    htmlContent += '</div>';
  }

  htmlContent += `
    <div class="footer">
      <p><strong>⚙️ ${getLocalizedText('generatedBy')}</strong></p>
      <p>📆 ${new Date().toLocaleDateString(language, { dateStyle: 'full' })}</p>
    </div>
  </div>
</body>
</html>
`;
  
  const blob = new Blob([htmlContent], { type: 'text/html' });
  downloadBlob(blob, `${filename}.html`);
}

function downloadBlob(blob: Blob, filename: string) {
  const url = URL.createObjectURL(blob);
  const a = document.createElement('a');
  a.href = url;
  a.download = filename;
  document.body.appendChild(a);
  a.click();
  document.body.removeChild(a);
  URL.revokeObjectURL(url);
}

export function createExportMenu(
  data: any,
  filename: string,
  title: string,
  language: string = 'en-US',
  onExport?: (format: string) => void
) {
  return {
    csv: () => {
      if (Array.isArray(data)) {
        exportToCSV(data, filename, language);
      } else {
        exportToCSV([data], filename, language);
      }
      onExport?.('CSV');
    },
    txt: () => {
      exportToText(data, filename, title, language);
      onExport?.('Text');
    },
    pdf: () => {
      exportToPDF(data, filename, title, language);
      onExport?.('PDF');
    },
  };
}
